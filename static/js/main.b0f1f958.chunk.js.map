{"version":3,"sources":["context/AuthContext.js","components/Login.js","components/UserData.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthProvider","props","useState","user","undefined","authState","setAuthState","useEffect","onAuthStateChanged","a","Provider","value","children","Login","useContext","googleProvider","GoogleAuthProvider","handleSignIn","signInWithGoogle","signInWithPopup","then","res","console","log","toast","displayName","email","catch","error","message","signOut","Fragment","Col","Row","Button","variant","onClick","className","UserData","dbItems","setDbItems","thingsDb","firestore","collection","addItemToDb","newItem","faker","commerce","productName","add","itemid","uuid","uid","name","category","success","unsubscribe","where","onSnapshot","querySnapshot","items","docs","map","doc","data","Alert","autoFocus","item","render","App","Container","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6SAIaA,EAAcC,0BAEtBC,IAASC,KAAKC,OAWlBF,IAASG,MAVTH,IAASI,cAAc,CACtBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAMV,IAAMC,EAAOZ,IAASY,OAEhBC,EAAe,SAACC,GAC5B,MAAkCC,mBAAS,CAAEC,UAAMC,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,qBAAU,WACTR,EAAKS,mBAAL,+BAAAC,EAAA,MAAwB,WAAON,GAAP,SAAAM,EAAA,sDACvBH,EAAa,CACZH,KAAMA,IAFgB,2CAAxB,yDAKE,IAEI,cAAClB,EAAYyB,SAAb,CAAsBC,MAAO,CAACN,EAAWC,GAAzC,SAAyDL,EAAMW,Y,QC1BxD,SAASC,IACvB,MAAkCC,qBAAW7B,GAA7C,mBAAOoB,EAAP,KAAkBC,EAAlB,KAEMS,EAAiB,IAAI5B,IAASY,KAAKiB,mBAEnCC,EAAe,WACpBC,KAGKA,EAAmB,WACxB/B,IACEY,OACAoB,gBAAgBJ,GAChBK,MAAK,SAACC,GAIN,OAHAC,QAAQC,IAAIF,EAAIlB,MAChBqB,YAAM,sBAAcH,EAAIlB,KAAKsB,YAAc,KAAOJ,EAAIlB,KAAKuB,MAAQ,KACnEpB,EAAa,2BAAKD,GAAN,IAAiBF,KAAMkB,EAAIlB,QAChCkB,EAAIlB,QAEXwB,OAAM,SAACC,GACPJ,YAAM,+BAAuBI,EAAMC,SACnCP,QAAQM,MAAMA,EAAMC,aAIjBC,EAAU,WACf/B,EAAK+B,UACLxB,EAAa,2BAAKD,GAAN,IAAiBF,UAAMC,MAmBpC,OACC,cAAC,IAAM2B,SAAP,UACC,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,UAlBG5B,EAAUF,KAQb,eAAC+B,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASN,EAAlC,UACC,mBAAGO,UAAU,iBADd,kBANA,eAACH,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASnB,EAAlC,UACC,mBAAGoB,UAAU,iBADd,4B,qECuCWC,EApEE,WAChB,MAAoBxB,qBAAW7B,GAAxBoB,EAAP,oBAEA,EAA8BH,qBAA9B,mBAAOqC,EAAP,KAAgBC,EAAhB,KAIMC,EAFKtD,IAASuD,YAEAC,WAAW,UAEzBC,EAAc,WACnB,IAAMC,EAAUC,IAAMC,SAASC,cAC/BP,EACEQ,IAAI,CACJC,OAAQC,cACRC,IAAK/C,EAAUF,KAAKiD,IACpBC,KAAMR,EACNS,SAAU,yBAEVlC,MAAK,WACLI,IAAM+B,QAAN,kBAAoBV,EAApB,gBAIHtC,oBAAS,sBAAC,4BAAAE,EAAA,sDAELJ,EAAUF,KACbqD,EAAcf,EAASgB,MAAM,MAAO,KAAMpD,EAAUF,KAAKiD,KAAKM,YAAW,SAACC,GACzE,IAAMC,EAAQD,EAAcE,KAAKC,KAAI,SAACC,GACrC,OAAOA,EAAIC,UAEZxB,EAAWoB,MAGZJ,GAAeA,IAVP,2CAYP,CAACnD,EAAUF,OA8Bd,OAAO,cAAC,IAAM4B,SAAP,UA5BQ,WACd,GAAI1B,EAAUF,KACb,OACC,gCACC,eAAC6B,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UACC,eAACgC,EAAA,EAAD,CAAO9B,QAAQ,UAAf,0BAAuC9B,EAAUF,KAAKsB,iBAEvD,cAACQ,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAQE,QAASQ,EAAasB,WAAS,EAAvC,oCAKF,uBACC3B,GACAA,EAAQuB,KAAI,SAACK,GACZ,OACC,sBAAwB9B,UAAU,oCAAlC,SACE8B,EAAKd,MADIc,EAAKjB,cAUCkB,MCpDVC,MAbf,WACC,OACC,eAACC,EAAA,EAAD,WACC,eAAC,EAAD,WACC,cAACzD,EAAD,IACA,uBACA,cAAC,EAAD,OAED,cAAC,IAAD,CAAgB0D,SAAS,qBCPbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.b0f1f958.chunk.js","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nexport const AuthContext = createContext();\n\nif (!firebase.apps.length) {\n\tfirebase.initializeApp({\n\t\tapiKey: \"AIzaSyACCHgp6UEYQcIdtcW8V7KWEn2T8DVAe1k\",\n\t\tauthDomain: \"fir-react-demo-c5a92.firebaseapp.com\",\n\t\tprojectId: \"fir-react-demo-c5a92\",\n\t\tstorageBucket: \"fir-react-demo-c5a92.appspot.com\",\n\t\tmessagingSenderId: \"80104492686\",\n\t\tappId: \"1:80104492686:web:a81ae7d80c0acb7c5c03df\",\n\t\tmeasurementId: \"G-5K9794DBGX\",\n\t});\n} else {\n\tfirebase.app();\n}\n\nexport const auth = firebase.auth();\n\nexport const AuthProvider = (props) => {\n\tconst [authState, setAuthState] = useState({ user: undefined });\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged(async (user) => {\n\t\t\tsetAuthState({\n\t\t\t\tuser: user,\n\t\t\t});\n\t\t});\n\t}, []);\n\n\treturn <AuthContext.Provider value={[authState, setAuthState]}>{props.children}</AuthContext.Provider>;\n};\n","import React, { useContext } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { AuthContext, auth } from \"../context/AuthContext\";\nimport { toast } from \"react-toastify\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nexport default function Login() {\n\tconst [authState, setAuthState] = useContext(AuthContext);\n\n\tconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\n\tconst handleSignIn = () => {\n\t\tsignInWithGoogle();\n\t};\n\n\tconst signInWithGoogle = () => {\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signInWithPopup(googleProvider)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.user);\n\t\t\t\ttoast(\"ðŸ‘‹ Hello \" + res.user.displayName + \" (\" + res.user.email + \")\");\n\t\t\t\tsetAuthState({ ...authState, user: res.user });\n\t\t\t\treturn res.user;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\ttoast(\"ðŸ’” Login failed : \" + error.message);\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t};\n\n\tconst signOut = () => {\n\t\tauth.signOut();\n\t\tsetAuthState({ ...authState, user: undefined });\n\t};\n\n\tconst renderLoginOrLogout = () => {\n\t\tif (!authState.user) {\n\t\t\treturn (\n\t\t\t\t<Button variant=\"danger\" onClick={handleSignIn}>\n\t\t\t\t\t<i className=\"bi bi-google\"></i>&nbsp;Google Login\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button variant=\"danger\" onClick={signOut}>\n\t\t\t\t\t<i className=\"bi bi-google\"></i>&nbsp;Sign Out\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Col>\n\t\t\t\t<Row>{renderLoginOrLogout()}</Row>\n\t\t\t</Col>\n\t\t</React.Fragment>\n\t);\n}\n","/* eslint-disable */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport faker from \"faker\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { Button, Col, Row, Alert } from \"react-bootstrap\";\nimport { v4 as uuid } from \"uuid\";\nimport { toast } from \"react-toastify\";\n\nconst UserData = () => {\n\tconst [authState] = useContext(AuthContext);\n\n\tconst [dbItems, setDbItems] = useState();\n\n\tconst db = firebase.firestore();\n\n\tconst thingsDb = db.collection(\"things\");\n\n\tconst addItemToDb = () => {\n\t\tconst newItem = faker.commerce.productName();\n\t\tthingsDb\n\t\t\t.add({\n\t\t\t\titemid: uuid(),\n\t\t\t\tuid: authState.user.uid,\n\t\t\t\tname: newItem,\n\t\t\t\tcategory: \"commerce.productName\",\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\ttoast.success(`âœ… \"${newItem}\" added`);\n\t\t\t});\n\t};\n\n\tuseEffect(async () => {\n\t\tlet unsubscribe;\n\t\tif (authState.user) {\n\t\t\tunsubscribe = thingsDb.where(\"uid\", \"==\", authState.user.uid).onSnapshot((querySnapshot) => {\n\t\t\t\tconst items = querySnapshot.docs.map((doc) => {\n\t\t\t\t\treturn doc.data();\n\t\t\t\t});\n\t\t\t\tsetDbItems(items);\n\t\t\t});\n\t\t} else {\n\t\t\tunsubscribe && unsubscribe();\n\t\t}\n\t}, [authState.user]);\n\n\tconst render = () => {\n\t\tif (authState.user) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Alert variant=\"warning\">Logged in as {authState.user.displayName}</Alert>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Button onClick={addItemToDb} autoFocus>\n\t\t\t\t\t\t\t\tAdd a Random Item\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<br />\n\t\t\t\t\t{dbItems &&\n\t\t\t\t\t\tdbItems.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span key={item.itemid} className=\"badge bg-success rounded-pill m-1\">\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn <React.Fragment>{render()}</React.Fragment>;\n};\n\nexport default UserData;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Login from \"./components/Login\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Container } from \"react-bootstrap\";\nimport { AuthProvider } from \"./context/AuthContext\";\nimport UserData from \"./components/UserData\";\n\nfunction App() {\n\treturn (\n\t\t<Container>\n\t\t\t<AuthProvider>\n\t\t\t\t<Login />\n\t\t\t\t<br />\n\t\t\t\t<UserData />\n\t\t\t</AuthProvider>\n\t\t\t<ToastContainer position=\"bottom-right\" />\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}